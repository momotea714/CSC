#pragma checksum "C:\Dev\CheckmatesMoq\WebApplication1\Views\UserManage\BulkRegist.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UserManage_BulkRegist), @"mvc.1.0.view", @"/Views/UserManage/BulkRegist.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e", @"/Views/UserManage/BulkRegist.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e8bf045fc77d7267a7f635ee5fe4bb5453c7a78", @"/Views/_ViewImports.cshtml")]
    public class Views_UserManage_BulkRegist : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "GetTemplateFile", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-lg btn-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-lg btn-primary ml-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary btn-lg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/handsontable/handsontable.full.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Dev\CheckmatesMoq\WebApplication1\Views\UserManage\BulkRegist.cshtml"
  
    ViewData["Title"] = "一括登録";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .upload-btn-wrapper {
        position: relative;
        overflow: hidden;
        display: inline-block;
    }

    .btn_fileupload {
        border: 2px solid gray;
        color: gray;
        background-color: white;
        padding: 8px 20px;
        border-radius: 8px;
        font-size: 20px;
        font-weight: bold;
    }

    .upload-btn-wrapper input[type=file] {
        font-size: 100px;
        position: absolute;
        left: 0;
        top: 0;
        opacity: 0;
    }

    ul.timeline {
        list-style-type: none;
        position: relative;
    }

        ul.timeline:before {
            content: ' ';
            background: #d4d9df;
            display: inline-block;
            position: absolute;
            left: 29px;
            width: 2px;
            height: 100%;
            z-index: 400;
        }

        ul.timeline > li {
            margin: 20px 0;
            padding-left: 20px;
        }

            ul.timeline");
            WriteLiteral(@" > li:before {
                content: ' ';
                background: white;
                display: inline-block;
                position: absolute;
                border-radius: 50%;
                border: 3px solid #22c0e8;
                left: 20px;
                width: 20px;
                height: 20px;
                z-index: 400;
            }

    .box {
        position: relative;
        background: #ffffff;
        width: 100%;
    }

    .box-header {
        color: #444;
        display: block;
        padding: 10px;
        position: relative;
        border-bottom: 1px solid #f4f4f4;
        margin-bottom: 10px;
    }

    .box-tools {
        position: absolute;
        right: 10px;
        top: 5px;
    }

    .dropzone-wrapper {
        border: 2px dashed #91b0b3;
        color: #92b0b3;
        position: relative;
        height: 150px;
    }

    .dropzone-desc {
        position: absolute;
        margin: 0 auto;
        left: 0;
  ");
            WriteLiteral(@"      right: 0;
        text-align: center;
        width: 40%;
        top: 50px;
        font-size: 16px;
    }

    .dropzone,
    .dropzone:focus {
        position: absolute;
        outline: none !important;
        width: 100%;
        height: 150px;
        cursor: pointer;
        opacity: 0;
    }

    .dropzone-wrapper:hover,
    .dropzone-wrapper.dragover {
        background: #ecf0f5;
    }

    .preview-zone {
        text-align: center;
    }

        .preview-zone .box {
            box-shadow: none;
            border-radius: 0;
            margin-bottom: 0;
        }
</style>

<div class=""container mt-5 mb-8"">
    <div class=""row"">
        <div class=""col-md-11 offset-md-1"">
            <h3 class=""ml-5"">■ユーザー取り込み</h3>
            <ul class=""timeline"">
                <li>
                    <div class=""card box-shadow"" style=""padding:20px;"">
                        <h4>1. テンプレートファイル取得</h4>
                        <div class=""border-top border mt-2 mb");
            WriteLiteral(@"-2""></div>
                        <p>テンプレートファイルを取得し、テンプレートファイル上に登録したいデータを入力してください。</p>
                        <p>既存のユーザーデータを修正して取り込みたい場合は、<br>右側の「修正用ファイル取得」ボタンから取得し、データを修正した上でアップロードしてください。</p>
                        <div class=""btn-toolbar"">
                            <div class=""btn-group"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e8900", async() => {
                WriteLiteral("<i class=\"fas fa-file-download faa-spin animated-hover\"></i> テンプレートファイル取得");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e10239", async() => {
                WriteLiteral("<i class=\"fas fa-file-download faa-spin animated-hover\"></i> 修正用ファイル取得");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </div>
                        </div>
                    </div>
                </li>
                <li>
                    <div class=""card box-shadow"" style=""padding:20px;"">
                        <h4>2. ファイルアップロード</h4>
                        <div class=""border-top border mt-2 mb-2""></div>
                        <p>入力が完了しましたら、以下のアップロードボタンよりファイルをアップロードしてください。</p>
                        <p>
                            新規のユーザーIDをアップロードした場合は、新たにユーザーが作成されます。<br>
                            既に登録済みのユーザーIDをアップロードした場合は、登録済みユーザーのデータを上書きします。
                        </p>
                        <div class=""dropzone-wrapper"">
                            <div class=""dropzone-desc"">
                                <i class=""fas fa-cloud-upload-alt""></i>
                                <p>csvファイルを選択<br>またはこちらにドラッグしてください</p>
                            </div>
                            <input type=""file"" name=""img_logo"" class=""dropzone"">
                        </div");
            WriteLiteral(@">
                        <div class=""preview-zone hidden"">
                            <div class=""box box-solid"">
                                <div class=""box-header with-border"">
                                    <div class=""box-tools pull-right"">
");
            WriteLiteral(@"                                    </div>
                                </div>
                                <div class=""box-body""></div>
                            </div>
                        </div>
                    </div>
                </li>
                <li>
                    <div class=""card box-shadow"" style=""padding:20px;"">
                        <h4>3. データ修正</h4>
                        <div class=""border-top border mt-2 mb-2""></div>
                        <p>エラーのある行のデータを修正してください。<br />修正が完了したらチェックボタンを押してください。</p>
                        <div id=""csv""></div>
                    </div>
                </li>
                <li>
                    <div class=""card box-shadow"" style=""padding:20px;"">
                        <h4>4. 登録</h4>
                        <div class=""border-top border mt-2 mb-2""></div>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e13821", async() => {
                WriteLiteral("登録");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6241cc0d2f8cfb79f9830522d4a6ec3947a42a8e15276", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        $(function () {
            function readFile(input) {
                var file = input.files[0];
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var htmlPreview = '<p>' + input.files[0].name + '</p>';
                        ToTable(reader);
                        ToDataTable();
                        var wrapperZone = $(input).parent();
                        var previewZone = $(input).parent().parent().find('.preview-zone');
                        var boxZone = $(input).parent().parent().find('.preview-zone').find('.box').find('.box-body');
                        wrapperZone.removeClass('dragover');
                        previewZone.removeClass('hidden');
                        boxZone.empty();
                        boxZone.append(htmlPreview);
                    };
                    // SJIS指定
                    reader.readAsText(file, 'SJIS');
 ");
                WriteLiteral(@"               }
            }

            function reset(e) {
                e.wrap('<form>').closest('form').get(0).reset();
                e.unwrap();
            }

            $("".dropzone"").change(function () {
                readFile(this);
            });

            $('.dropzone-wrapper').on('dragover', function (e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).addClass('dragover');
            });

            $('.dropzone-wrapper').on('dragleave', function (e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).removeClass('dragover');
            });

            $('.remove-preview').on('click', function () {
                var boxZone = $(this).parents('.preview-zone').find('.box-body');
                var previewZone = $(this).parents('.preview-zone');
                var dropzone = $(this).parents('.form-group').find('.dropzone');
                boxZone.empty()");
                WriteLiteral(@";
                previewZone.addClass('hidden');
                reset(dropzone);
            });

            var table = null;
            function ToDataTable() {
                table = $(""#import_table"").DataTable({
                    ""keys"": true,
                    ""drawCallback"": function (settings) {
                        console.log('DataTables has redrawn the table');
                    },
                    oLanguage: {
                        /* 日本語化設定 */
                        sLengthMenu: ""表示　_MENU_　件"", // 表示行数欄(例 = 表示 10 件)
                        oPaginate: { // ページネーション欄
                            sNext: ""次へ"",
                            sPrevious: ""前へ""
                        },
                        sInfo: ""_TOTAL_ 件中 _START_件から_END_件 を表示しています"", // 現在の表示欄(例 = 100 件中 20件から30件 を表示しています)
                        sSearch: ""検索 "", // 検索欄(例 = 検索 --)
                        sZeroRecords: ""表示するデータがありません"", // 表示する行がない場合
                        sInfoEmpty: ""0 件中 0件 を表示");
                WriteLiteral(@"しています"", // 行が表示されていない場合
                        sInfoFiltered: ""全 _MAX_ 件から絞り込み"" // 検索後に総件数を表示する場合
                    }
                });
            }

            $('body').on('dblclick', 'td:not(:has(button))', function () {
                $(this).attr('contenteditable', 'true');
                var el = $(this);
                var range = document.createRange();
                var sel = window.getSelection();
                if (el[0].childNodes.length > 0) {
                    range.setStart(el[0].childNodes[0], 0);
                    range.collapse(true);
                    sel.removeAllRanges();
                    sel.addRange(range);
                }
                el.focus();
                $(this).blur(endEdition);
            });

            function endEdition() {
                var el = $(this);
                table.cell(el).invalidate().draw();
                el.attr('contenteditable', 'false');
                el.off('blur', endEdition); // To prevent a");
                WriteLiteral(@"nother bind to this function
            }

            function ToTable(reader) {
                var contents = reader.result;
                // 改行で分割
                lf = contents.split(""\r\n"");
                var pre_num = 0;
                var pre_line = '';
                var sum_num = 0;
                var lines = [];
                var i = 0;

                $.each(lf, function (lfKey, lfVal) {
                    // 改行毎のダブルクオート数
                    sum_num = lfVal.split('""').length - 1 + pre_num;
                    if (pre_line == '') {
                        multi_line = lfVal;
                    } else {
                        // 改行で前行と結合
                        multi_line = pre_line + ""\r\n"" + lfVal;
                    }
                    if (sum_num % 2 == 0) {
                        // ダブルクオートが偶数
                        lines[i] = multi_line;
                        pre_num = 0;
                        pre_line = '';
                        i++;
       ");
                WriteLiteral(@"             } else {
                        // ダブルクオートが奇数
                        pre_num = sum_num;
                        pre_line = multi_line;
                    }
                });

                if (lines.length > 0) {
                    var data = [];
                    $.each(lines, function (linesKey, linesVal) {
                        linesVal = $.trim(linesVal.replace(/(^[\s]+|[\s]+$)/g, ''));
                        // 空行は除外
                        if (linesVal !== '') {
                            // カンマで分割
                            var cell = linesVal.split(',');
                            var pre_num = 0;
                            var pre_data = '';
                            var arr = [];
                            var j = 0;
                            $.each(cell, function (cellKey, cellVal) {
                                // カンマ毎のダブルクオート数
                                if (pre_data == '') {
                                    multi_data = cellVal;");
                WriteLiteral(@"
                                } else {
                                    // カンマで前セルと結合
                                    multi_data = pre_data + "","" + cellVal;
                                }
                                if (sum_num % 2 == 0) {
                                    // ダブルクオートが偶数
                                    // セル前後のダブルクオートを削除
                                    multi_data = $.trim(multi_data.replace(/(^""+|""+$)/g, ''));
                                    // セル内の""""を""へ置換
                                    multi_data = multi_data.replace(/""""/g, '""');
                                    arr[j] = multi_data;
                                    pre_num = 0;
                                    pre_data = '';
                                    j++;
                                } else {
                                    // ダブルクオートが奇数
                                    pre_num = sum_num;
                                    pre_data = multi_data;
              ");
                WriteLiteral(@"                  }
                            });
                            data[linesKey] = arr;
                        }
                    });
                }

                // table生成
                $('#csv').html(""<table id='import_table' class='table table-bordered table-striped'><thead></thead><tbody style='cursor: pointer'></tbody></table>"");
                $.each(data, function (dataKey, dataVal) {
                    if (dataKey == 0) {
                        $('thead').append('<tr id=""row' + dataKey + '""  class=""text-center"" style=""background-color:ghostwhite""></tr>');
                        $('tr[id=row' + dataKey + ']').append('<th>エラー内容</th>');
                        $.each(dataVal, function (data2Key, data2Val) {
                            // セル内改行を<br>へ
                            data2Val = data2Val.replace(/(\r\n|\n)/g, '<br>');
                            $('tr[id=row' + dataKey + ']').append('<th>' + data2Val + '</th>');
                        });
       ");
                WriteLiteral(@"             }
                    else {
                        if (dataKey == 3) {
                            $('tbody').append('<tr id=""row' + dataKey + '"" class=""text-center"" style=""background-color:pink;""></tr>');
                            $('tr[id=row' + dataKey + ']').append('<td>グループが存在しません</td>');
                        }
                        else {
                            $('tbody').append('<tr id=""row' + dataKey + '"" class=""text-center""></tr>');
                            $('tr[id=row' + dataKey + ']').append('<td></td>');
                        }
                        $.each(dataVal, function (data2Key, data2Val) {
                            // セル内改行を<br>へ
                            data2Val = data2Val.replace(/(\r\n|\n)/g, '<br>');
                            $('tr[id=row' + dataKey + ']').append('<td>' + data2Val + '</td>');
                        });
                    }

                });
            }

            function csvToArray(csv) {
         ");
                WriteLiteral("       return csv.split(\'\\n\').map(function (x) {\r\n                    return x.split(\',\');\r\n                })\r\n            };\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
