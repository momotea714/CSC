#pragma checksum "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8545cae055f6be0b43571eb35e15579fbc8419de"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Allocation_Index), @"mvc.1.0.view", @"/Views/Allocation/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Dev\CheckmatesMoq\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8545cae055f6be0b43571eb35e15579fbc8419de", @"/Views/Allocation/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e8bf045fc77d7267a7f635ee5fe4bb5453c7a78", @"/Views/_ViewImports.cshtml")]
    public class Views_Allocation_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2020年度入学試験", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2021年度入学試験", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2022年度入学試験", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2023年度入学試験", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2024年度入学試験", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mt-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
  
    ViewData["Title"] = "採点者振り分け";

    //var tests = new
    var mondaishubetu = new List<dynamic>
{
        new {Id = "mondaishubetu1", Shubetu = "単E", BatchSuu = 60,SetsumonSuu = 60, HuriwakeSuu = 0, ZanSuu = 60},
        new {Id = "mondaishubetu2", Shubetu = "単M", BatchSuu = 20,SetsumonSuu = 10, HuriwakeSuu = 0, ZanSuu = 20},
        new {Id = "mondaishubetu3", Shubetu = "単H", BatchSuu = 10,SetsumonSuu = 2, HuriwakeSuu = 0, ZanSuu = 10},
        new {Id = "mondaishubetu4", Shubetu = "選択肢", BatchSuu = 50,SetsumonSuu = 50, HuriwakeSuu = 0, ZanSuu = 50},
        new {Id = "mondaishubetu5", Shubetu = "受験者", BatchSuu = 50,SetsumonSuu = 50, HuriwakeSuu = 0, ZanSuu = 50},
    };

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    div.btnLeft {
        text-align: left;
        float: left;
    }

    div.btnRight {
        text-align: right;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    .scrollTable tbody, .scrollTable thead {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    }

    .scrollTable tr {
        -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }

    .scrollTable th, .scrollTable td {
        -webkit-box-flex: 1;
        -ms-flex: 1;
        flex: 1;
        /*text-align: center;*/
    }

    .scrollTable tbody {
        max-height: 500px;
        overflow-y: auto;
    }

    /* width */
    ");
            WriteLiteral(@".scrollTable ::-webkit-scrollbar {
        width: 2px;
    }

    /* Track */
    .scrollTable ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 5px grey;
        border-radius: 10px;
    }

    /* Handle */
    .scrollTable ::-webkit-scrollbar-thumb {
        background: blue;
        border-radius: 10px;
    }

    table.table-hover tbody tr td:hover {
        background-color: azure;
    }
</style>

<ul class=""nav nav-pills shadow nav-fill flex-column flex-lg-row text-lg-center mt-2"" style=""font-size:20px"" role=""tablist"">
    <li class=""nav-item "">
        <a class=""nav-link border active"" id=""item1-tab"" data-toggle=""tab"" href=""#Huriwake"" role=""tab"" aria-controls=""item1"" aria-selected=""true"">
            採点者振り分け
            <i class=""far fa-question-circle"" data-toggle=""tooltip"" data-placement=""top"" style=""font-size:24px"" data-html=""true"" data-delay=""500"" title=""<h5>イメージ処理済みの試験の設問を問題種別単位に各グループへ振分けを行います。</h5>""></i>
        </a>
    </li>
    <li class=""nav-item"">
       ");
            WriteLiteral(@" <a class=""nav-link border"" id=""item3-tab"" data-toggle=""tab"" href=""#item3"" role=""tab"" aria-controls=""item3"" aria-selected=""false"">
            振り分け状況確認
            <i class=""far fa-question-circle"" data-toggle=""tooltip"" data-placement=""top"" style=""font-size:24px"" data-html=""true"" data-delay=""500"" title=""<h5>各グループに振分けたバッチ数等を確認します。</h5>""></i>
        </a>
    </li>
</ul>

<div class=""tab-content"">
    <div class=""tab-pane fade show active"" id=""Huriwake"" role=""tabpanel"" aria-labelledby=""item1-tab"">
        <div class=""container-fluid border mt-4"" style=""background-color:ghostwhite"">
            <h5>■試験選択</h5>
            <div class=""mt-2 mb-3"">
                <div class=""btnLeft"">
                    <div class=""form-inline"">
                        <label class=""col-auto"" for=""inExamId"">試験ID：</label>
                        <select id=""inExamId1"" class=""col-auto form-control custom-select"" ");
            WriteLiteral("@change=\"onChangeExam\" style=\"min-width:200px;\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de9725", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de11182", async() => {
                WriteLiteral("20-1009-1");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de12373", async() => {
                WriteLiteral("21-1009-2");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de13564", async() => {
                WriteLiteral("22-1009-3");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de14755", async() => {
                WriteLiteral("23-1009-4");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de15946", async() => {
                WriteLiteral("24-1009-5");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </select>\r\n                        <select id=\"inExamId2\" class=\"col-auto form-control custom-select\" ");
            WriteLiteral("@change=\"onChangeExam\" style=\"min-width:400px;\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de17356", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de18814", async() => {
                WriteLiteral("2020年度入学試験");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de20006", async() => {
                WriteLiteral("2021年度入学試験");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de21198", async() => {
                WriteLiteral("2022年度入学試験");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de22390", async() => {
                WriteLiteral("2023年度入学試験");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de23582", async() => {
                WriteLiteral("2024年度入学試験");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                        <span class=""ml-4"" v-bind:class=""{ invisible: !isActiveHuriwakeTables }"">
                            <b>
                                受験者数：1200人　設問数：172　総バッチ数：215　未振分バッチ数：215
                            </b>
                        </span>
                    </div>
                </div>
                <div class=""btnRight"">
                    <button class=""btn btn btn-primary"">
                        振分登録
                    </button>
                </div>
            </div>
        </div>
        <div id=""HuriwakeTables"" class=""mt-4 row"" v-bind:class=""{ invisible: !isActiveHuriwakeTables }"">
            <div class=""col-md-6"">
                <div style=""margin-bottom:5px;"">
                    <div class=""btnLeft"">
                        <button class=""btn btn-sm btn-primary"" v-on:click='hasCheckAll(true,true)'>
                            全選択
                        </button>
                        <button class=""");
            WriteLiteral(@"btn btn-sm btn-primary"" v-on:click='hasCheckAll(true,false)'>
                            全解除
                        </button>
                    </div>
                    <div class=""btnRight"">
                        <button class=""btn btn-sm btn-primary"" v-on:click=""clickAutoSetting"">
                            自動設定
                            <i class=""far fa-question-circle"" data-toggle=""tooltip"" data-placement=""top"" style=""font-size:18px"" data-html=""true"" data-delay=""500"" title=""<h5>各グループに振分けたバッチ数等を確認します。</h5>""></i>
                        </button>
                    </div>
                </div>
                <table id=""groupTable"" class=""table table-bordered table-hover table-sm border scrollTable"">
                    <thead>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">
                            <th class=""align-middle"" rowspan=""1"" width=""5%"">選択</th>
                            <th class=""align-middle"" rowspan=""1"">グループ名</th>
          ");
            WriteLiteral(@"                  <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                受験者<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""JukenshaSuu"",true)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                選択肢<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""SentakusiSuu"",true)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                単E<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanESuu"",true");
            WriteLiteral(@")'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                単M<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanMSuu"",true)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                単H<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanHSuu"",true)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">合計</th>
                        </tr>
          ");
            WriteLiteral(@"          </thead>
                    <tbody class=""text-center"" style=""cursor:pointer"">
                        <tr v-for=""group in groups"" class=""text-center"" v-on:dblclick=""onRowDblClick(group)"">
                            <td class=""center align-middle"">
                                <input type=""checkbox"" class=""group_select_checkbox"" v-model=""group.IsSelected"">
                            </td>
                            <td class=""align-middle"">{{group.GroupName}}</td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""group.Id"" v-model=""group.JukenshaSuu"" style=""background-color: transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""group.Id"" v-model=""group.SentakusiSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control t");
            WriteLiteral(@"ext-center border-0"" v-bind:data-id=""group.Id"" v-model=""group.TanESuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""group.Id"" v-model=""group.TanMSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""group.Id"" v-model=""group.TanHSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle"">{{ Number(group.JukenshaSuu) + Number(group.SentakusiSuu) + Number(group.TanESuu) + Number(group.TanMSuu) + Number(group.TanHSuu) }}</td>
                        </tr>
                    </tbody>
                    <tfoot class=""text-center"" style=""background-color:ghostwhite;font-weight:600;"">
                        <tr>
                            <th></th>
                            <th>振分数</th>
              ");
            WriteLiteral(@"              <th>{{getHuriwakeSuu('JukenshaSuu',true)}}</th>
                            <th>{{getHuriwakeSuu('SentakusiSuu',true)}}</th>
                            <th>{{getHuriwakeSuu('TanESuu',true)}}</th>
                            <th>{{getHuriwakeSuu('TanMSuu',true)}}</th>
                            <th>{{getHuriwakeSuu('TanHSuu',true)}}</th>
                            <th>{{getHuriwakeSuu('TotalSuu',true)}}</th>
                        </tr>
                        <tr>
                            <th></th>
                            <th>未振分数</th>
                            <th>{{getMihuriwakeSuu('JukenshaSuu',true)}}</th>
                            <th>{{getMihuriwakeSuu('SentakusiSuu',true)}}</th>
                            <th>{{getMihuriwakeSuu('TanESuu',true)}}</th>
                            <th>{{getMihuriwakeSuu('TanMSuu',true)}}</th>
                            <th>{{getMihuriwakeSuu('TanHSuu',true)}}</th>
                            <th>{{getMihuriwakeSuu('TotalSuu',t");
            WriteLiteral(@"rue)}}</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class=""col-md-6"">
                <div style=""display:block;margin-bottom:5px;"">
                    <div class=""btnLeft"">
                        <button class=""btn btn-sm btn-primary"" v-on:click='hasCheckAll(false,true)'>
                            全選択
                        </button>
                        <button class=""btn btn-sm btn-primary"" v-on:click='hasCheckAll(false,false)'>
                            全解除
                        </button>
                        <span class=""ml-2 mt-2 font-weight-bold"">選択グループ：{{ selectedGroupName }}</span>
                    </div>
                </div>
                <table id=""userTable"" class=""table table-bordered table-hover table-sm scrollTable"">
                    <thead>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">
                            <th class=""align-mi");
            WriteLiteral(@"ddle"" width=""5%"">
                                選択
                            </th>
                            <th class=""align-middle"">採点者名</th>
                            <th class=""align-middle"" style=""width: 100px;"">
                                受験者<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""JukenshaSuu"",false)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                選択肢<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""SentakusiSuu"",false)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                ");
            WriteLiteral(@"                単E<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanESuu"",false)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                単M<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanMSuu"",false)'>
                                    均等
                                </button>
                            </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">
                                単H<br>
                                <button class=""btn btn-sm btn-outline-primary pt-0 pb-0"" v-on:click='kintouHuriwake(""TanHSuu"",false)'>
                                    均等
                                </button>
               ");
            WriteLiteral(@"             </th>
                            <th class=""align-middle"" rowspan=""1"" style=""width: 100px;"">合計</th>
                        </tr>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">
                        </tr>
                    </thead>
                    <tbody class=""text-center"" style=""cursor:pointer"">
                        <tr v-for=""user in filteredUsers"" class=""text-center"">
                            <td class=""center align-middle"">
                                <input type=""checkbox"" class=""user_select_checkbox"" v-model=""user.IsSelected"">
                            </td>
                            <td class=""align-middle"">{{user.UserName}}</td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""user.Id"" v-model=""user.JukenshaSuu"" style=""background-color: transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" cl");
            WriteLiteral(@"ass=""form-control text-center border-0"" v-bind:data-id=""user.Id"" v-model=""user.SentakusiSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""user.Id"" v-model=""user.TanESuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""user.Id"" v-model=""user.TanMSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle""><input type=""number"" class=""form-control text-center border-0"" v-bind:data-id=""user.Id"" v-model=""user.TanHSuu"" style=""background-color:transparent;"" /></td>
                            <td class=""align-middle"">{{ Number(user.JukenshaSuu) + Number(user.SentakusiSuu) + Number(user.TanESuu) + Number(user.TanMSuu) + Number(user.TanHSuu) }}</td>
                        </tr>
                    </tbody>
   ");
            WriteLiteral(@"                 <tfoot class=""text-center"" style=""background-color:ghostwhite;font-weight:600;"">
                        <tr>
                            <th></th>
                            <th>振分数</th>
                            <th>{{getHuriwakeSuu('JukenshaSuu',false)}}</th>
                            <th>{{getHuriwakeSuu('SentakusiSuu',false)}}</th>
                            <th>{{getHuriwakeSuu('TanESuu',false)}}</th>
                            <th>{{getHuriwakeSuu('TanMSuu',false)}}</th>
                            <th>{{getHuriwakeSuu('TanHSuu',false)}}</th>
                            <th>{{getHuriwakeSuu('TotalSuu',false)}}</th>
                        </tr>
                        <tr>
                            <th></th>
                            <th>未振分数</th>
                            <th>{{getMihuriwakeSuu('JukenshaSuu',false)}}</th>
                            <th>{{getMihuriwakeSuu('SentakusiSuu',false)}}</th>
                            <th>{{getMihuriwakeSuu('TanE");
            WriteLiteral(@"Suu',false)}}</th>
                            <th>{{getMihuriwakeSuu('TanMSuu',false)}}</th>
                            <th>{{getMihuriwakeSuu('TanHSuu',false)}}</th>
                            <th>{{getMihuriwakeSuu('TotalSuu',false)}}</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class=""tab-pane fade"" id=""item3"" role=""tabpanel"" aria-labelledby=""item3-tab"">
        <div class=""container-fluid border mt-4"" style=""background-color:ghostwhite"">
            <h5>■表示条件変更</h5>
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8545cae055f6be0b43571eb35e15579fbc8419de39456", async() => {
                WriteLiteral(@"
                <div class=""row text-nowrap"">
                    <div class=""col-3"">
                        <label for=""searchCondition_examName"">
                            【試験名】
                        </label>
                        <input id=""searchCondition_examName"" type=""text"" class=""col-12 bg-white form-control"" />
                    </div>
                    <div class=""col-2"">
                        <label for=""searchCondition_groupName""");
                BeginWriteAttribute("class", " class=\"", 19179, "\"", 19187, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                            【グループ名】\r\n                        </label>\r\n                        <input id=\"searchCondition_groupName\" type=\"text\" class=\"bg-white form-control\"");
                BeginWriteAttribute("placeholder", " placeholder=\"", 19365, "\"", 19379, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                    </div>
                    <div class=""col-2"">
                        <label for=""searchCondition_UserName"">
                            【採点者名】
                        </label>
                        <input id=""searchCondition_UserName"" type=""text"" class=""bg-white form-control""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 19690, "\"", 19704, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                    </div>
                    <div class=""col-2 text-center mt-3 mb-4"">
                        <button type=""submit"" class=""btn-lg form-control btn-outline-primary"">表示切替</button>
                    </div>
                </div>

            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
        <div class=""row mt-4"">
            <div class=""col-6"">
                <h5>【グループ別振り分け数】</h5>
                <table class=""table table-bordered table-hover table-striped"">
                    <thead>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">
                            <th class=""align-middle"">グループ名</th>
                            <th class=""align-middle"">受験者</th>
                            <th class=""align-middle"">選択肢</th>
                            <th class=""align-middle"">単E</th>
                            <th class=""align-middle"">単M</th>
                            <th class=""align-middle"">単H</th>
                            <th class=""align-middle"">合計</th>
                        </tr>
                    </thead>
                    <tbody class=""text-center "" style=""cursor:pointer"">
");
#nullable restore
#line 373 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                          
                            var rnd = new Random();
                            for (int i = 1; i <= 10; i++)
                            {
                                var jukensha = rnd.Next(0, 10);
                                var sentakusi = rnd.Next(0, 10);
                                var tanE = rnd.Next(0, 10);
                                var tanM = rnd.Next(0, 10);
                                var tanH = rnd.Next(0, 10);

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td class=\"align-middle\">グループ");
#nullable restore
#line 383 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                             Write(i.ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 384 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(jukensha);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 385 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(sentakusi);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 386 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanE);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 387 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanM);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 388 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanH);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 389 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                         Write(jukensha + sentakusi + tanE + tanM + tanH);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n\r\n                                </tr>\r\n");
#nullable restore
#line 392 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                            }
                        

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
            <div class=""col-6"">
                <h5>【採点者別振り分け数】</h5>
                <table class=""table table-bordered table-hover table-striped border"">
                    <thead>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">
                            <th class=""align-middle"">グループ名</th>
                            <th class=""align-middle"">採点者名</th>
                            <th class=""align-middle"">受験者</th>
                            <th class=""align-middle"">選択肢</th>
                            <th class=""align-middle"">単E</th>
                            <th class=""align-middle"">単M</th>
                            <th class=""align-middle"">単H</th>
                            <th class=""align-middle"">合計</th>
                        </tr>
                        <tr class=""text-center"" style=""background-color:ghostwhite"">


                    </thead>
                    <");
            WriteLiteral("tbody class=\"text-center \" style=\"cursor:pointer\">\r\n");
#nullable restore
#line 416 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                          
                            var rnd2 = new Random();
                            for (int i = 1; i <= 10; i++)
                            {
                                var jukensha = rnd.Next(0, 10);
                                var sentakusi = rnd.Next(0, 10);
                                var tanE = rnd.Next(0, 10);
                                var tanM = rnd.Next(0, 10);
                                var tanH = rnd.Next(0, 10);

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td class=\"align-middle\">グループ");
#nullable restore
#line 426 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                             Write(i.ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">ユーザー0");
#nullable restore
#line 427 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                              Write(i.ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 428 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(jukensha);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 429 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(sentakusi);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 430 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanE);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 431 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanM);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 432 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                        Write(tanH);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"align-middle\">");
#nullable restore
#line 433 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                                                         Write(jukensha + sentakusi + tanE + tanM + tanH);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n\r\n                                </tr>\r\n");
#nullable restore
#line 436 "C:\Dev\CheckmatesMoq\WebApplication1\Views\Allocation\Index.cshtml"
                            }
                        

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js""></script>
    <script>
        $(function () {
            $('[data-toggle=""tooltip""]').tooltip();

            var groups = [
                { GroupName: ""グループ1"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 1, IsSelected: true },
                { GroupName: ""グループ2"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 2, IsSelected: false },
                { GroupName: ""グループ3"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 3, IsSelected: false },
                { GroupName: ""グループ4"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 4, IsSelected: false },
                { GroupName: ""グループ5"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 5, IsSelected: false },
                { GroupName: ""グループ6"", JukenshaSuu: 0, SentakusiSuu: 0, TanESuu: 0, TanMSuu: 0, TanHSuu: 0, ID: 6, IsSelected: false }
     ");
                WriteLiteral(@"       ];

            var users = [];
            var count = 1;
            groups.forEach(group => {
                for (var i = 1; i < 7; i++) {
                    users.push({
                        GroupName: group.GroupName,
                        UserName: ""採点者"" + count.toString(),
                        JukenshaSuu: group.JukenshaSuu,
                        SentakusiSuu: group.SentakusiSuu,
                        TanESuu: group.TanESuu,
                        TanMSuu: group.TanMSuu,
                        TanHSuu: group.TanHSuu,
                        ID: count.toString(),
                        IsSelected: false
                    });
                    count++;
                }
            });

            var vm = new Vue({
                el: ""#Huriwake"",
                data: {
                    groups: groups,
                    users: users,
                    initialGroupHuriwakeZan: {
                        JukenshaSuu: 60,
                     ");
                WriteLiteral(@"   SentakusiSuu: 50,
                        TanESuu: 40,
                        TanMSuu: 45,
                        TanHSuu: 20,
                        TotalSuu: 215
                    },
                    isActiveHuriwakeTables: false,
                },
                computed: {
                    filteredUsers: function () {
                        return this.users.filter(function (user) {
                            return groups.some(group => group.IsSelected && group.GroupName == user.GroupName);
                        });
                    },
                    selectedGroupName: function () {
                        let str = '';
                        this.groups.forEach(group => {
                            if (group.IsSelected) {
                                str += group.GroupName + ', ';
                            }
                        });

                        return str.endsWith(', ') ? str.replace(/(.*), /, ""$1"") : str;
                    }
 ");
                WriteLiteral(@"               },
                methods: {
                    onRowDblClick(target) {
                        target.IsSelected = !target.IsSelected;
                    },
                    onChangeExam(event) {
                        console.log(event.target.value);
                        this.isActiveHuriwakeTables = true;
                    },
                    clickAutoSetting() {
                        this.groups[0].JukenshaSuu = this.initialGroupHuriwakeZan.JukenshaSuu;
                        this.groups[1].SentakusiSuu = this.initialGroupHuriwakeZan.SentakusiSuu;
                        this.groups[2].TanESuu = this.initialGroupHuriwakeZan.TanESuu;
                        this.groups[3].TanMSuu = this.initialGroupHuriwakeZan.TanMSuu;
                        this.groups[4].TanHSuu = this.initialGroupHuriwakeZan.TanHSuu;
                    },
                    hasCheckAll: function (isgroup, hasCheck) {
                        if (isgroup) {
                            ");
                WriteLiteral(@"this.groups.forEach(x => {
                                x.IsSelected = hasCheck;
                            });
                        }
                        else {
                            this.filteredUsers.forEach(user => {
                                user.IsSelected = hasCheck;
                            });
                        }
                    },

                    kintouHuriwake(targetColumn, isGroup) {
                        var zan = this.getMihuriwakeSuu(targetColumn, isGroup);

                        if (zan === 0) {
                            alert('未振分数が0です。');
                            return;
                        }

                        var targetList = isGroup ? this.groups : this.filteredUsers;
                        var cnt = targetList.filter(function (x) { return x.IsSelected }).length;
                        var huriateZumiSuu = 0;

                        if (cnt == 0) {
                            alert('振り分ける対象を選択してください');");
                WriteLiteral(@"
                            return;
                        }

                        targetList.forEach(x => {
                            if (x.IsSelected) {
                                const huriateSuu = zan / cnt | 0;
                                x[targetColumn] += huriateSuu;
                                huriateZumiSuu += huriateSuu;
                            }
                        });

                        if (zan > huriateZumiSuu) {
                            targetList.forEach(x => {
                                if (x.IsSelected && zan > huriateZumiSuu) {
                                    let huriateSuu = zan - huriateZumiSuu;
                                    if (huriateSuu <= cnt) {
                                        huriateSuu = 1;
                                    }
                                    x[targetColumn] += huriateSuu;
                                    huriateZumiSuu += huriateSuu;
                                    return;
  ");
                WriteLiteral(@"                              }
                            });
                        }
                    },
                    getHuriwakeSuu(targetColumn, isGroup) {
                        var targetList = isGroup ? this.groups : this.filteredUsers;
                        if (targetColumn == 'TotalSuu') {
                            return targetList.reduce((acc, cur) => acc + Number(cur.JukenshaSuu) + Number(cur.SentakusiSuu) + Number(cur.TanESuu) + Number(cur.TanMSuu) + Number(cur.TanHSuu), 0);
                        }
                        else {
                            return targetList.reduce((acc, cur) => acc + Number(cur[targetColumn]), 0);
                        }
                    },
                    getMihuriwakeSuu(targetColumn, isGroup) {
                        if (isGroup) {
                            return this.initialGroupHuriwakeZan[targetColumn] - this.getHuriwakeSuu(targetColumn, isGroup);
                        }
                        else {
   ");
                WriteLiteral(@"                         const val = this.groups.filter(function (x) { return x.IsSelected })
                                .reduce((acc, cur) => acc + Number(cur[targetColumn]), 0)
                                - this.getHuriwakeSuu(targetColumn, isGroup);

                            return val ? val : 0;
                        }
                    }
                }
            });

        });

        function Huriwake() {

        }

        function FormDetail(repoNo) {
            $('tbody > tr').css({ 'background-color': '' });
            $('#' + repoNo).css({ 'background-color': '#c1f5f5' });
            //var dataArr = $('#' + repoNo)[0].innerText.split('\t');
            //alert(dataArr[0]);
            //$('#inFormNo').val(dataArr[0]);
            ////alert($('#inExamId').val(dataArr[2]).val());
            //$('#inExamId').val(dataArr[2]);
            //$('#inExamName').val(dataArr[2]);
            //$('#inFormName').val(dataArr[2]);
            //$('#inSubject'");
                WriteLiteral(").val(\'国語\');\r\n            //$(\'#inItemCount\').val(\'20\');\r\n            //$(\'#inTotalScore\').val(\'300\');\r\n            //$(\'#detailButton\').css(\'display\', \'block\');\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
